//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use super::sea_orm_active_enums::ExecutionOutcomeStatus;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "transactions")]
pub struct Model {
    #[sea_orm(primary_key, column_type = "Text")]
    pub transaction_hash: String,
    #[sea_orm(column_type = "Text")]
    pub included_in_block_hash: String,
    #[sea_orm(column_type = "Text")]
    pub included_in_chunk_hash: String,
    pub index_in_chunk: i32,
    #[sea_orm(column_type = "Decimal(Some((20, 0)))")]
    pub block_timestamp: Decimal,
    #[sea_orm(column_type = "Text")]
    pub signer_account_id: String,
    #[sea_orm(column_type = "Text")]
    pub signer_public_key: String,
    #[sea_orm(column_type = "Decimal(Some((20, 0)))")]
    pub nonce: Decimal,
    #[sea_orm(column_type = "Text")]
    pub receiver_account_id: String,
    #[sea_orm(column_type = "Text")]
    pub signature: String,
    pub status: ExecutionOutcomeStatus,
    #[sea_orm(column_type = "Text")]
    pub converted_into_receipt_id: String,
    #[sea_orm(column_type = "Decimal(Some((20, 0)))", nullable)]
    pub receipt_conversion_gas_burnt: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((45, 0)))", nullable)]
    pub receipt_conversion_tokens_burnt: Option<Decimal>,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
