//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "chunks")]
pub struct Model {
    #[sea_orm(column_type = "Text")]
    pub included_in_block_hash: String,
    #[sea_orm(primary_key, column_type = "Text")]
    pub chunk_hash: String,
    #[sea_orm(column_type = "Decimal(Some((20, 0)))")]
    pub shard_id: Decimal,
    #[sea_orm(column_type = "Text")]
    pub signature: String,
    #[sea_orm(column_type = "Decimal(Some((20, 0)))")]
    pub gas_limit: Decimal,
    #[sea_orm(column_type = "Decimal(Some((20, 0)))")]
    pub gas_used: Decimal,
    #[sea_orm(column_type = "Text")]
    pub author_account_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
